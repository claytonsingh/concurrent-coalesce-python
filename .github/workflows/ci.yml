name: CI

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]

jobs:
  release-create:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Set Env
      run: |
        echo "RELEASE_NAME=${GITHUB_REF_NAME} / $(git show -s --format=%cs)" >> ${GITHUB_ENV}
    - name: Check Version Match
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        pip install --upgrade pip
        pip install toml
        python .github/check_version.py
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        gh release create "${GITHUB_REF_NAME}" --title "${{ env.RELEASE_NAME }}" --generate-notes --draft
        sleep 10
      env:
        GH_TOKEN: ${{ github.token }}

  build-and-test:
    needs: release-create
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        python-version: ["2.7", "3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Build-And-Test
      uses: addnab/docker-run-action@v3
      with:
        image: python:${{ matrix.python-version }}-slim
        options: -v ${{ github.workspace }}:/workspace
        run: |
          cd /workspace
          python -m pip install --upgrade pip
          pip install -e .
          bash ./build.sh
          pip install dist/*.whl

    - name: Show Dist
      run: |
        ls -la dist
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Upload Release
      if: startsWith(github.ref, 'refs/tags/v') && (matrix.python-version == '2.7' || matrix.python-version == '3.13')
      run: |
        gh release upload "${GITHUB_REF_NAME}" dist/*
      env:
        GH_TOKEN: ${{ github.token }}
